# Generated by Django 5.1.2 on 2024-11-19 16:38

import django.contrib.auth.models
import django.core.validators
import django.db.models.deletion
import yumelinkapp.utils.type_enums.filter_type
import yumelinkapp.utils.type_enums.language_type
import yumelinkapp.utils.type_enums.like_type
import yumelinkapp.utils.type_enums.report_type
import yumelinkapp.utils.type_enums.share_type
import yumelinkapp.utils.utils
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='ChatRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chat_name', models.CharField(default='Untitled', max_length=100)),
                ('profile', models.ImageField(blank=True, null=True, upload_to=yumelinkapp.utils.utils.chatroom_profile_path)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(max_length=5000)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('filter_content', models.CharField(choices=[('none', 'None'), ('mature', 'Mature'), ('violent', 'Violent'), ('nudity', 'Nudity'), ('suggestive', 'Sexually Suggestive Themes'), ('drug', 'Substance abuse')], default=yumelinkapp.utils.type_enums.filter_type.FilterType['none'], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(blank=True, default='Untitled', max_length=100, null=True)),
                ('bio', models.TextField(blank=True, max_length=500, null=True)),
                ('profile', models.ImageField(blank=True, null=True, upload_to=yumelinkapp.utils.utils.user_profile_path)),
                ('header', models.ImageField(blank=True, null=True, upload_to=yumelinkapp.utils.utils.user_profile_path)),
                ('color', models.CharField(default='#000000', help_text='Enter a color code in the format #RRGGBB.', max_length=7, validators=[django.core.validators.RegexValidator(message='Color must be in the format #RRGGBB (e.g., #FFFFFF for white).', regex='^#([A-Fa-f0-9]{6})$')])),
                ('language', models.CharField(choices=[('TH', 'Thai'), ('ENG', 'English')], default=yumelinkapp.utils.type_enums.language_type.LanguageType['ENG'], max_length=100)),
                ('filter_content', models.CharField(choices=[('none', 'None'), ('mature', 'Mature')], default=yumelinkapp.utils.type_enums.filter_type.FilterType['none'], max_length=100)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PostImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to=yumelinkapp.utils.utils.post_image_upload_path)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='yumelinkapp.post')),
            ],
        ),
        migrations.CreateModel(
            name='PostTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='yumelinkapp.post')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='yumelinkapp.tag')),
            ],
        ),
        migrations.CreateModel(
            name='Share',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('share_type', models.CharField(choices=[('Link', 'Link'), ('Reblog', 'Reblog'), ('Line', 'Line'), ('Facebook', 'Facebook'), ('tumblr', 'tumblr')], default=yumelinkapp.utils.type_enums.share_type.ShareType['link'], max_length=100)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='yumelinkapp.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='yumelinkapp.user')),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('content', 'Content filter violation'), ('hate', 'Hate speech'), ('cyberbully', 'Cyberbullying'), ('fake_user', 'Identity impersonation'), ('fake', 'Fake news'), ('other', 'Other')], default=yumelinkapp.utils.type_enums.report_type.ReportType['other'], max_length=100)),
                ('content', models.TextField(default='', max_length=5000)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='yumelinkapp.post')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reporter', to='yumelinkapp.user')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='yumelinkapp.user')),
            ],
        ),
        migrations.AddField(
            model_name='post',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='yumelinkapp.user'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('is_read', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='yumelinkapp.user')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(max_length=5000)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('chat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='yumelinkapp.chatroom')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='yumelinkapp.user')),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('like', 'Like'), ('love', 'Love')], default=yumelinkapp.utils.type_enums.like_type.LikeType['like'], max_length=100)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='yumelinkapp.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='yumelinkapp.user')),
            ],
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notify', models.BooleanField(default=False)),
                ('follower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followers', to='yumelinkapp.user')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following', to='yumelinkapp.user')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(max_length=500)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='yumelinkapp.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='yumelinkapp.user')),
            ],
        ),
        migrations.CreateModel(
            name='Block',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blocked', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocked_users', to='yumelinkapp.user')),
                ('blocker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blockers', to='yumelinkapp.user')),
            ],
        ),
        migrations.CreateModel(
            name='UserChat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='yumelinkapp.chatroom')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='yumelinkapp.user')),
            ],
        ),
    ]
